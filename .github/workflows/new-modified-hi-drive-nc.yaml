on:
  workflow_dispatch:

name: New-Modified-Hi-Drive-Build-NC
jobs:
  build-and-push:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Verify Make Installation
        run: make --version  

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: IONOS-Productivity/nc-server
          ref: master

      - name: Package Code
        run: |
          pwd
          ls -la
          tar -czf /tmp/nc-server.tar.gz ../internal-sh-runner-nc/
          ls -lh /tmp/nc-server.tar.gz

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nc-server-package
          path: /tmp/nc-server.tar.gz  

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        id: install
        with:
          version: 'latest'  
          
      - name: Create Docker Secret Config for Kaniko
        run: |
          mkdir -p $HOME/.docker
          AUTH="$(echo -n "${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }}" | base64)"
          echo "{\"auths\":{\"reg.1u1.it:443\":{\"auth\":\"${AUTH}\"}}}" > $HOME/.docker/config.json
          set +e
          kubectl get secret docker-sec-config -n arc-runners
          if [ $? -ne 0 ]; then
            kubectl create secret generic docker-sec-config --from-file=config.json=$HOME/.docker/config.json --namespace=arc-runners
          else
            echo "docker-sec-config already exists, skipping creation."
          fi
          set -e
        
      - name: Create Dockerfile for Kaniko
        run: |
          set +e
          kubectl get secret docker-file-config
          if [ $? -ne 0 ]; then            
            kubectl create secret generic docker-file-config --from-file=Dockerfile=./.devcontainer/Dockerfile --namespace=arc-runners
          else
            echo "docker-file-config already exists, skipping creation."
          fi
          set -e 

      - name: Create and Apply Kaniko Job
        run: |
          set +e
          # Check if the job exists
          kubectl get job kaniko-nc-build-push -n arc-runners
          if [ $? -eq 0 ]; then
            echo "Job kaniko-nc-build-push exists, deleting it..."
            kubectl delete job kaniko-nc-build-push -n arc-runners
          fi
      
          # Create a new job
          echo "
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: kaniko-build-push-nc-image
            namespace: arc-runners
          spec:
            template:
              spec:                                 
                containers:
                - name: kaniko
                  image: gcr.io/kaniko-project/executor:latest
                  args:
                  - --dockerfile=/workspace/Dockerfile
                  - --context=dir:///workspace
                  - --destination=reg.1u1.it:443/itoah/drive-nc:latest
                  - --skip-tls-verify
                  volumeMounts:
                  - name: build-context
                    mountPath: /workspace                    
                  - name: docker-sec-config
                    mountPath: /kaniko/.docker
                restartPolicy: Never
                volumes:
                - name: build-context
                  secret:
                    secretName: docker-file-config
                - name: docker-sec-config
                  secret:
                    secretName: docker-sec-config
            backoffLimit: 1
          " | kubectl apply -f -
          set -e
    
      - name: Monitor Job Status
        run: |
          echo "Monitoring Nextcloud build job."
          kubectl wait --for=condition=complete job/kaniko-build-push-nc-image --timeout=1200s
          echo "Nextcloud Image is pushed to the Harbor Registry."   
            
      - name: Delete Kaniko Job
        run: |
          kubectl delete job kaniko-build-push-nc-image --namespace=arc-runners --ignore-not-found
          kubectl delete secret -n arc-runners docker-sec-config
          kubectl delete secret -n arc-runners docker-file-config
          echo "All tasks completed gracefully."
